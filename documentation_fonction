Fonctions du module de l'interace graphique:

  void Enregistrer (GtkWidget *p_widget, GtkWidget *text );
  void RecupererChemin(GtkWidget *bouton, GtkWidget *selection);
  void ChoisirFichier();
  void ViderContenaire(GtkContainer * container);
  void MenuResultatSubstitution(GtkWidget *Fenetre, DOUBLEC *Donnees);
  void MenuResultatVigenere(GtkWidget *Fenetre, gchar* TexteCrypt, gchar* cle);
  void MenuResultatAnalyse(GtkWidget *Fenetre, ANALYSE analyse);
  void MenuResultatDecryptageSubstitution(GtkWidget *Fenetre, DOUBLEC* Donnees);
  void MenuResultatDecryptageVigenere(GtkWidget *Fenetre, DOUBLEC *Donnees);
  void BoiteDialogueSubstitution(GtkWidget *Fenetre);
  void BoiteDialogueVigenereCle(GtkWidget *Fenetre);
  void BoiteDialogueVigenereTexte(GtkWidget *Fenetre, DOUBLEC *Donnees);
  void BoiteDialogueAnalyse(GtkWidget *Fenetre);
  void BoiteDialogueDecryptageSubstitution(GtkWidget *Fenetre);
  void BoiteDialogueDecryptageVigenere(GtkWidget *Fenetre);
  void MenuDecryptageVigenere(GtkWidget *Fenetre);
  void MenuDecryptageSubstitution(GtkWidget *Fenetre);
  void MenuCryptageVigenere(GtkWidget *Fenetre,DOUBLEC *Donnees);
  void MenuCryptageSubstitution(GtkWidget *Fenetre);
  void MenuAnalyseFrequentielle(GtkWidget *Fenetre);
  void MenuDecryptage(GtkWidget *Fenetre);
  void MenuCryptage(GtkWidget *Fenetre);
  void MenuPrincipal(GtkWidget *Fenetre);
  void MenuResultatDecryptagePartiel(GtkWidget *Fenetre,DOUBLEC* Donnees);
  void BoiteDialogueChangerLaCleSubstitution(GtkWidget *Fenetre,DOUBLEC *Donnees);
  void MenuResultatDecryptagePartielVig(GtkWidget *Fenetre);
  
Fonctions du module d'analyse fréquentielle:

  ANALYSE AnalyseFreq(ANALYSE a,gchar* T,int kasiski);
  
  ANALYSE AnalyseFrequentielle(gchar* Texte);
  
Fonctions du module du cryptage par substitution
  void CryptageSubstitution(gchar TexteCrypte[], gchar* TexteClair, gchar cle[]);
  -C'est la fonction qui va effectuer un cryptage par substitution sur un texte clair.
  void GenereCle(gchar T[]);
  -Cette procédure permet de génerer une clé(alphabet) aléatoirement dans le tableau T.
  int *tirage(int nombre, int min, int max);
  -Cette fonction permet "nombre" nombres dans l'intervalle "min"-"max".
  int Ascii0_25(int nbr);
  -Cette fonction prend le code ascii d'une lettre en caractere et la renvoyer dans [0;25]
  
Fonctions du module du décryptage par substitution:

  void CreeTabOccA(gchar TabOcc[],ANALYSE analyseTexte);
  void CreeTabOccRL(gchar TabOcc[],RESSOURCESLANGUE ressourceLangue);
  void DecryptageSubstitution(gchar TexteDecrypte[],gchar TexteCrypte[],gchar cle[]);
  gchar RechercheAnalyse(ANALYSE a,gchar car,gchar* fait);
  gchar RechercheRessources(RESSOURCESLANGUE a,gchar car,gchar* fait);
  ANALYSE Remplace(ANALYSE a,gchar car,gchar nvx);
  void InitTableau(gchar* TexteClair,gchar TabOccA[],gchar TabOccRL[],gchar cle[]);
  gchar RechercheTri(gchar* TexteCrypte,gchar* cle,ANALYSE a,RESSOURCESLANGUE a2, gchar car,gchar car2,gchar* fait);
  
Fonctions du module du cryptage par la méthode de vigenère: 

  void CryptageVigenere(gchar* resultat, gchar* TexteClair, gchar* Cle)
  -Cette fonction va effectuer un cryptage par vigenere sur un texte clair.
  
Fonctions du module du décryptage par la méthode de vigenère:

  int pgcd(int a, int b);
    
  int Kasiski(ANALYSE a, gchar* texteCrypte);
  void indiceMutuelle(int cle[], int kasiski, ANALYSE freq, RESSOURCESLANGUE prob, gchar safecle[]);
  void Decrypte(char resultat[],char* texteCrypte,gchar cle[], int kasiski);
  void DecryptageVigenere(gchar* TexteDecrypte, gchar* TexteCrypte,gchar savecle[]);
  
  
